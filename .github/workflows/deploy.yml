name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Install Docker on EC2
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "if ! command -v docker &> /dev/null; then sudo apt-get update && sudo apt-get install -y docker.io && sudo systemctl enable docker && sudo systemctl start docker; fi"

    - name: Install Docker Compose on EC2
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "if ! command -v docker-compose &> /dev/null; then sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-\$(uname -s)-\$(uname -m)\" -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose; fi"

    - name: Create website directory
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p ~/website"

    - name: Setup Git repository
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd ~/website && if [ ! -d .git ]; then git clone https://github.com/quantumhiveinc/website.git .; else git config --global --add safe.directory \$(pwd) && git pull origin main; fi"

    - name: Fix Docker permissions
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo chmod 666 /var/run/docker.sock && sudo usermod -aG docker \$USER"

    - name: Setup required directories with proper permissions
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd ~/website && sudo mkdir -p ./letsencrypt && sudo chmod -R 755 ./letsencrypt && sudo touch ./letsencrypt/acme.json && sudo chmod 600 ./letsencrypt/acme.json && sudo mkdir -p ./frontend && sudo chmod -R 755 ./frontend && sudo mkdir -p ./traefik && sudo chmod -R 755 ./traefik"

    - name: Copy frontend files
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd ~/website && sudo chown -R \$USER:\$USER ./frontend"

    - name: Deploy with Docker Compose
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd ~/website && sudo docker-compose down && sudo docker-compose up -d --build"
        
    - name: Verify containers are running
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd ~/website && sudo docker ps"